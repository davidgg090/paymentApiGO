{
    "swagger": "2.0",
    "info": {
        "description": "API para el manejo de pagos",
        "title": "API de Pagos",
        "contact": {},
        "version": "1"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/customer": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Agrega un nuevo customer a la base de datos con la información proporcionada en el cuerpo de la solicitud.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Crea un nuevo customer",
                "parameters": [
                    {
                        "description": "Información del customer",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Customer creado exitosamente",
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    },
                    "400": {
                        "description": "Error al procesar los datos de entrada",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor al crear el customer",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/customer/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Obtiene un customer por su ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Obtiene un customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Customer",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer encontrado",
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    },
                    "404": {
                        "description": "Customer no encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Actualiza la información de un customer existente por su ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Actualiza un customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Customer",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Información actualizada del Customer",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer actualizado",
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    },
                    "400": {
                        "description": "Entrada inválida",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Customer no encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Elimina un customer por su ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Elimina un customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Customer",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Customer eliminado exitosamente"
                    },
                    "404": {
                        "description": "Customer no encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/merchant": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Agrega un nuevo merchant a la base de datos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "merchant"
                ],
                "summary": "Crea un nuevo merchant",
                "parameters": [
                    {
                        "description": "Información del merchant",
                        "name": "merchant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Merchant"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Merchant creado",
                        "schema": {
                            "$ref": "#/definitions/model.Merchant"
                        }
                    },
                    "400": {
                        "description": "Entrada inválida",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/merchant/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Obtiene un merchant por su ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "merchant"
                ],
                "summary": "Obtiene un merchant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Merchant",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Merchant"
                        }
                    },
                    "404": {
                        "description": "Merchant no encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Actualiza la información de un merchant existente por su ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "merchant"
                ],
                "summary": "Actualiza un merchant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Merchant",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Información actualizada del Merchant",
                        "name": "merchant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Merchant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Merchant"
                        }
                    },
                    "400": {
                        "description": "Entrada inválida",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Merchant no encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Elimina un merchant por su ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "merchant"
                ],
                "summary": "Elimina un merchant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Merchant",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Merchant eliminado exitosamente"
                    },
                    "404": {
                        "description": "Merchant no encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/transaction": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Crea una nueva transacción con los datos proporcionados",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Crea una nueva transacción",
                "parameters": [
                    {
                        "description": "Datos de la Transacción",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Transaction"
                        }
                    }
                }
            }
        },
        "/api/transaction/process": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Procesa una transacción dada, capturándola o reembolsándola basado en el tipo de transacción especificado.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Procesa una transacción",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token de la transacción",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tipo de transacción (capture, refund)",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transacción procesada",
                        "schema": {
                            "$ref": "#/definitions/model.Transaction"
                        }
                    },
                    "400": {
                        "description": "Error de solicitud - Transacción ya procesada, tipo de transacción inválido, tarjeta de crédito inválida, etc.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Transacción no encontrada",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/transaction/token/{token}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Obtiene una transacción por su token único",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Obtiene una transacción por token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token de la Transacción",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Transaction"
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/transaction/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Obtiene una transaccion por su ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Obtiene una transacción",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Transaction",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaccion encontrada",
                        "schema": {
                            "$ref": "#/definitions/model.Transaction"
                        }
                    },
                    "404": {
                        "description": "Transaccion no encontrada",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Actualiza una transacción existente; solo se permite si el estado es \"pending\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Actualiza una transacción",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la Transacción",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Datos de la Transacción a actualizar",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TransactionUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transacción actualizada"
                    },
                    "400": {
                        "description": "Entrada inválida"
                    },
                    "404": {
                        "description": "Transacción no encontrada"
                    }
                }
            }
        },
        "/api/user/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Obtiene un usuario por su ID, excluyendo la contraseña en la respuesta.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Obtiene un usuario",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Usuario",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuario encontrado",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "401": {
                        "description": "No autorizado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Usuario no encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error al obtener el usuario",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Actualiza la información de un usuario existente por su ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Actualiza un usuario",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Usuario",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Información actualizada del Usuario",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Usuario no encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Elimina un usuario por su ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Elimina un usuario",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Usuario",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Usuario eliminado correctamente"
                    },
                    "404": {
                        "description": "Usuario no encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Autentica a un usuario basado en `username` y `password` y genera un JWT.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Inicia sesión de usuario",
                "parameters": [
                    {
                        "description": "Credenciales de inicio de sesión",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.loginCredentialsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token generado exitosamente",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Credenciales inválidas",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Usuario no encontrado o contraseña incorrecta",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "Crea un nuevo usuario con username y password proporcionados.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Crea un nuevo usuario",
                "parameters": [
                    {
                        "description": "Credenciales de usuario",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.createUserDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Usuario creado con ID y username",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Error al decodificar solicitud o usuario/password faltantes",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Nombre de usuario ya existe",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error al hashear la contraseña / Error al crear el usuario",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.CreateTransactionRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "integer"
                },
                "hash_credit_card": {
                    "type": "string"
                },
                "merchant_id": {
                    "type": "integer"
                }
            }
        },
        "model.Customer": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "hash_credit_card": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Merchant": {
            "type": "object",
            "properties": {
                "amount_account": {
                    "type": "number"
                },
                "authentication_key": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "integer"
                },
                "hash_credit_card": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "merchant_id": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.TransactionUpdateDTO": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "omitempty permite que el campo sea opcional",
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.createUserDTO": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.loginCredentialsDTO": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}